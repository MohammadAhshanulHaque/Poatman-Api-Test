{
	"info": {
		"_postman_id": "24a288d9-2239-42e9-bd99-735cc34f45a2",
		"name": "QA Quiz Challenge-API Test Script",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44249121",
		"_collection_link": "https://www.postman.com/ahsan-2800627/workspace/my-workspace/collection/44249121-24a288d9-2239-42e9-bd99-735cc34f45a2?action=share&source=collection_link&creator=44249121"
	},
	"item": [
		{
			"name": "Verify the backend request path is active",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Backend API\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9999/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9999",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify the user creation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Account Created\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"xyz\",\n  \"name\": \"JohnDoe\",\n  \"password\": \"mySecurePass123\",\n  \"favouriteFruit\": \"Mango\",\n  \"favouriteMovie\": \"Inception\",\n  \"favouriteNumber\": \"420\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9999/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9999",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify existing user not creation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Account Already Exists\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"xyz\",\n  \"name\": \"JohnDoe\",\n  \"password\": \"mySecurePass123\",\n  \"favouriteFruit\": \"Mango\",\n  \"favouriteMovie\": \"Inception\",\n  \"favouriteNumber\": \"420\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9999/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9999",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify user info updation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Account Updated\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"abc\",\n  \"password\": \"0000000\",\n  \"favouriteFruit\": \"Mango\",\n  \"favouriteMovie\": \"Inception\",\n  \"favouriteNumber\": \"786\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9999/user?username=xyz",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9999",
					"path": [
						"user"
					],
					"query": [
						{
							"key": "username",
							"value": "xyz"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify user deletion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Account Deleted\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"xyz\"\n}\n\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9999/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9999",
					"path": [
						"user"
					],
					"query": [
						{
							"key": "username",
							"value": "johndoe",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify user doesn't exists for updation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Account Does NOT Exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"abc\",\n  \"password\": \"Test@123\",\n  \"favouriteFruit\": \"Mango\",\n  \"favouriteMovie\": \"Inception\",\n  \"favouriteNumber\": \"786\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9999/user?username=xyz",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9999",
					"path": [
						"user"
					],
					"query": [
						{
							"key": "username",
							"value": "xyz"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify user doesn't exists for delatation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Account Does Not Exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"xyz\"\n}\n\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9999/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9999",
					"path": [
						"user"
					],
					"query": [
						{
							"key": "username",
							"value": "johndoe",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}